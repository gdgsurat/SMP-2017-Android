1.  stdint.h is a header file in the C standard library introduced in the C99 standard library section 7.18 to allow programmers to write more portable code by providing a set of typedefs that specify exact-width integer types, together with the defined minimum and maximum allowable values for each type, using macros .
2.  It makes clear that you intend to use the data a specific way.
	uint24_t means an integer that is exactly 24 bits wide.
3.  BYTE is 1 byte
	DWORD is 4 bytes
	LONG is 4 bytes
	WORD is 2 bytes
4.  The first two bytes of a BMP is a WORD and denotes bfType, which specifies the file type. It must be
 	set to the signature word BM (0x4D42) to indicate bitmap.
5.  bfSize specifies the size, in bytes, of the bitmap file.
	biSize specifies the size of the structure in bytes.
6.  If biHeight is positive, the bitmap is a bottom-up DIB (device-independent bitmap)
	and its origin is the lower left corner.
	
	If biHeight is negative, the bitmap is a top-down DIB (device-independent bitmap)
	and its origin is the upper left corner.
7.  The biBitCount member of the BITMAPINFOHEADER structure determines the number of
	bits that define each pixel and the maximum number of colors in the bitmap
8.  fopen will return NULL if it cannot create the outfile to write to. I don't know why that might happen.

9.  I think it is because the program is reading in 1 RGB triple at a time. The header comments seem to confirm.
10. biWidth is the width of the bitmap in pixels. If the width is 3, padding is necessary since
	the scanline must be a multiple of 4.
	3 pixels * 3 bytes per pixel = 9 bytes. 3 bytes are added to bring the scanline to 12 bytes.
	I don't understand the math, though.
11. Skips over any padding and looks for the next pixel (RGB triple)
12. This is an integer constant which, when used as the whence argument to the fseek or fseeko function,
	specifies that the offset provided is relative to the current file position
